/**
 * Utils
 */

/**
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf:before,
.u-cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.u-cf:after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
  display: table-cell !important;
  /* 1 */
  width: 10000px !important;
  /* 2 */
}

/**
 * Floats
 */

.u-floatLeft {
  float: left !important;
}

.u-floatRight {
  float: right !important;
}

@media (min-width:0) and (max-width:740px) {
  .u-sm-floatNone {
    clear: both;
    float: none !important;
  }
}



.u-bgFaint {
  opacity: .9;
}

.u-bgHigh {
  background-color: rgb(245, 246, 247);
}

.u-bgHigher {
  background-color: rgb(254, 254, 254);
}

.u-bgHighest {
  background-color: #fff;
}

.u-bgLow {
  background-color: rgb(229, 232, 233);
}

.u-bgLower {
  background-color: rgb(222, 225, 226);
}

.u-bgLowest {
  background-color: rgb(215, 217, 218);
}

.u-bgPop {
  border: 1px solid rgba(32, 113, 138, 0.12);
  border-bottom-width: 2px;
}

.u-bgNeutral {
  background-color: #ECEFF0;
}

.u-bgPrimary {
  background-color: #03A6D7;
}

.u-bgSecondary {
  background-color: #20718A;
}

.u-bgDanger {
  background-color: rgb(255, 216, 216);
}

.u-bgWarning {
  background-color: rgb(255, 238, 204);
}

.u-bgUnsure {
  background-color: rgb(253, 252, 232);
}

.u-bgSuccess {
  background-color: rgb(222, 244, 229);
}

.u-bgHighlight {
  background-color: rgb(205, 237, 247);
}

/**
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  position: absolute !important;
  overflow: hidden !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%;
  /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}



/**
 * Round box
 *
 * Use of % here will distort box if it is not square
 */

.u-round {
  border-radius: 1000px !important;
  overflow: hidden !important;
}

.u-roundish {
  border-radius: 0.5625rem !important;
  overflow: hidden !important;
}

.u-rounded {
  border-radius: 1.125rem !important;
  overflow: hidden !important;
}

@media (min-width:0) and (max-width:740px) {
  .u-sm-hidden {
    display: none !important;
  }
}

@media (min-width:741px) and (max-width:960px) {
  .u-md-hidden {
    display: none !important;
  }
}

@media (max-width:960px) {
  .u-ltemd-hidden {
    display: none !important;
  }
}

@media (min-width:741px) {
  .u-gtemd-hidden {
    display: none !important;
  }
}

@media (min-width:961px) and (max-width:1270px) {
  .u-lg-hidden {
    display: none !important;
  }
}

@media (min-width:961px) {
  .u-gtelg-hidden {
    display: none !important;
  }
}



/**
 * Definition lists
 *
 * Remove default styling
 */

.u-dlUnstyled > dd {
  margin-left: 0;
}

/**
 * Display definition lists inline
 */

.u-dlInline dt,
.u-dlInline dd {
  display: inline-block;
  margin-right: 0.1875rem;
  margin-left: 0;
}

/**
 * Standard lists
 *
 * Remove default styling
 */

.u-listUnstyled {
  margin-bottom: 0;
  padding-left: 0;
  list-style: none;
}

.u-listUnstyled > li {
  margin-left: 0;
  list-style: none;
}

/**
 * Display list items inline
 */

.u-listInline {
  margin-left: -0.1875rem;
  padding-left: 0;
  list-style: none;
}

.u-listInline > li {
  display: inline-block;
  padding-right: 0.1875rem;
  padding-left: 0.1875rem;
}

/**
 * Display list items inline
 */

.u-listHorizontal {
  /* Remove extra spacing inline-block adds */
  font-size: 0;
  list-style: none;
}

.u-listHorizontal > li {
  /* Return font to normal size */
  font-size: 1rem;
  display: inline-block;
  vertical-align: top;
}

.u-posAbsolute {
  position: absolute !important;
}

/**
 * Pins to all corners by default. But when a width and/or height are
 * provided, the element will be centered in its nearest relatively-positioned
 * ancestor.
 */

.u-posAbsoluteCenter {
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important;
  position: absolute !important;
  right: 0 !important;
  top: 0 !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.u-posFixed {
  position: fixed !important;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /* 1 */
}

.u-posRelative {
  position: relative !important;
}

.u-posStatic {
  position: static !important;
}

.u-posAbsoluteLeft {
  bottom: 0 !important;
  left: 0 !important;
  position: absolute !important;
  top: 0 !important;
}

.u-posAbsoluteRight {
  bottom: 0 !important;
  right: 0 !important;
  position: absolute !important;
  top: 0 !important;
}

.u-posCenterCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

/**
 * Sizing utilities
 */

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit,
.u-sizeFitAlt {
  display: block !important;
  float: left !important;
  width: auto !important;
}

.u-sizeFitAlt {
  float: right !important;
}

/**
 * Make an element fill the remaining space.
 * N.B. This will hide overflow.
 */

.u-sizeFill {
  display: block !important;
  overflow: hidden !important;
  width: auto !important;
}

/**
 * An alternative method to make an element fill the remaining space.
 * N.B. Do not use if child elements might be wider than the remaining space.
 * In Chrome, Safari, and Firefox it results in undesired layout.
 */

.u-sizeFillAlt {
  display: table-cell !important;
  max-width: 100% !important;
  width: 10000px !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 */

.u-size1of12 {
  width: 8.333333333333332% !important;
}

.u-size1of10 {
  width: 10% !important;
}

.u-size1of8 {
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  width: 16.666666666666664% !important;
}

.u-size1of5,
.u-size2of10 {
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important;
}

.u-size3of10 {
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.33333333333333% !important;
}

.u-size3of8 {
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  width: 40% !important;
}

.u-size5of12 {
  width: 41.66666666666667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important;
}

.u-size7of12 {
  width: 58.333333333333336% !important;
}

.u-size3of5,
.u-size6of10 {
  width: 60% !important;
}

.u-size5of8 {
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.66666666666666% !important;
}

.u-size7of10 {
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  width: 83.33333333333334% !important;
}

.u-size7of8 {
  width: 87.5% !important;
}

.u-size9of10 {
  width: 90% !important;
}

.u-size11of12 {
  width: 91.66666666666666% !important;
}

/**
 * Size: breakpoint 1 (small)
 */

@media (min-width:0) and (max-width:740px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-sm-sizeFit,
  .u-sm-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-sm-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-sm-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-sm-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-sm-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 1 (small)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-sm-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-sm-size1of10 {
    width: 10% !important;
  }

  .u-sm-size1of8 {
    width: 12.5% !important;
  }

  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important;
  }

  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important;
  }

  .u-sm-size3of10 {
    width: 30% !important;
  }

  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-sm-size3of8 {
    width: 37.5% !important;
  }

  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important;
  }

  .u-sm-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important;
  }

  .u-sm-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important;
  }

  .u-sm-size5of8 {
    width: 62.5% !important;
  }

  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-sm-size7of10 {
    width: 70% !important;
  }

  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important;
  }

  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important;
  }

  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-sm-size7of8 {
    width: 87.5% !important;
  }

  .u-sm-size9of10 {
    width: 90% !important;
  }

  .u-sm-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Size: breakpoint 2 (medium)
 */

@media (min-width:741px) and (max-width:960px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit,
  .u-md-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-md-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-md-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-md-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 2 (medium)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-md-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-md-size1of10 {
    width: 10% !important;
  }

  .u-md-size1of8 {
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important;
  }

  .u-md-size3of10 {
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-md-size3of8 {
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important;
  }

  .u-md-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important;
  }

  .u-md-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important;
  }

  .u-md-size5of8 {
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-md-size7of10 {
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-md-size7of8 {
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    width: 90% !important;
  }

  .u-md-size11of12 {
    width: 91.66666666666666% !important;
  }
}

/**
 * Size: breakpoint 3 (large)
 */

@media (min-width:961px) and (max-width:1270px) {
  /**
   * Make an element shrink wrap its content.
   */

  .u-lg-sizeFit,
  .u-lg-sizeFitAlt {
    display: block !important;
    float: left !important;
    width: auto !important;
  }

  .u-lg-sizeFitAlt {
    float: right !important;
  }

  /**
   * Make an element fill the remaining space.
   * N.B. This will hide overflow.
   */

  .u-lg-sizeFill {
    display: block !important;
    overflow: hidden !important;
    width: auto !important;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * N.B. Do not use if child elements might be wider than the remaining space.
   * In Chrome, Safari, and Firefox it results in undesired layout.
   */

  .u-lg-sizeFillAlt {
    display: table-cell !important;
    max-width: 100% !important;
    width: 10000px !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-lg-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /* Proportional widths: breakpoint 3 (large)
     ========================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   */

  .u-lg-size1of12 {
    width: 8.333333333333332% !important;
  }

  .u-lg-size1of10 {
    width: 10% !important;
  }

  .u-lg-size1of8 {
    width: 12.5% !important;
  }

  .u-lg-size1of6,
  .u-lg-size2of12 {
    width: 16.666666666666664% !important;
  }

  .u-lg-size1of5,
  .u-lg-size2of10 {
    width: 20% !important;
  }

  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    width: 25% !important;
  }

  .u-lg-size3of10 {
    width: 30% !important;
  }

  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    width: 33.33333333333333% !important;
  }

  .u-lg-size3of8 {
    width: 37.5% !important;
  }

  .u-lg-size2of5,
  .u-lg-size4of10 {
    width: 40% !important;
  }

  .u-lg-size5of12 {
    width: 41.66666666666667% !important;
  }

  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    width: 50% !important;
  }

  .u-lg-size7of12 {
    width: 58.333333333333336% !important;
  }

  .u-lg-size3of5,
  .u-lg-size6of10 {
    width: 60% !important;
  }

  .u-lg-size5of8 {
    width: 62.5% !important;
  }

  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    width: 66.66666666666666% !important;
  }

  .u-lg-size7of10 {
    width: 70% !important;
  }

  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    width: 75% !important;
  }

  .u-lg-size4of5,
  .u-lg-size8of10 {
    width: 80% !important;
  }

  .u-lg-size5of6,
  .u-lg-size10of12 {
    width: 83.33333333333334% !important;
  }

  .u-lg-size7of8 {
    width: 87.5% !important;
  }

  .u-lg-size9of10 {
    width: 90% !important;
  }

  .u-lg-size11of12 {
    width: 91.66666666666666% !important;
  }
}



/* Width */

.u-sizeWidth-1-4 {
  width: 0.375rem !important;
}

.u-sizeWidth-1-2 {
  width: 0.75rem !important;
}

.u-sizeWidth-3-4 {
  width: 1.125rem !important;
}

.u-sizeWidth-1 {
  width: 1.5rem !important;
}

.u-sizeWidth-1_1-2 {
  width: 2.25rem !important;
}

.u-sizeWidth-2 {
  width: 3rem !important;
}

.u-sizeWidth-6 {
  width: 9rem !important;
}

/* Height */

.u-sizeHeight-1-4 {
  height: 0.375rem !important;
}

.u-sizeHeight-1-2 {
  height: 0.75rem !important;
}

.u-sizeHeight-3-4 {
  height: 1.125rem !important;
}

.u-sizeHeight-1 {
  height: 1.5rem !important;
}

.u-sizeHeight-1_1-4 {
  height: 1.875rem !important;
}

.u-sizeHeight-1_1-2 {
  height: 2.25rem !important;
}

.u-sizeHeight-2 {
  height: 3rem !important;
}

/* Line Height */

.u-sizeLineHeight-1-4 {
  line-height: 0.375rem !important;
}

.u-sizeLineHeight-1-2 {
  line-height: 0.75rem !important;
}

.u-sizeLineHeight-3-4 {
  line-height: 1.125rem !important;
}

.u-sizeLineHeight-1 {
  line-height: 1.5rem !important;
}

.u-sizeLineHeight-1_1-4 {
  line-height: 1.875rem !important;
}

.u-sizeLineHeight-1_1-2 {
  line-height: 2.25rem !important;
}

.u-sizeLineHeight-2 {
  line-height: 3rem !important;
}



/**
 * Utils - Space
 *
 * Margin and Padding
 * Sizes: 1/4, 1/2, 3/4, 1, 1 1/2, 2
 * Sides: all, top, right, bottom, left, vertical, horizontal;
 */

/**
 * Margin
 *
 * u-sM
 */

/* All */

.u-sM-1-8 {
  margin: 0.1875rem !important;
}

.u-sM-1-4 {
  margin: 0.375rem !important;
}

.u-sM-1-2 {
  margin: 0.75rem !important;
}

.u-sM-3-4 {
  margin: 1.125rem !important;
}

.u-sM-1 {
  margin: 1.5rem !important;
}

.u-sM-1_1-2 {
  margin: 2.25rem !important;
}

.u-sM-2 {
  margin: 3rem !important;
}

/* Top */

.u-sMT-1-8 {
  margin-top: 0.1875rem !important;
}

.u-sMT-1-4 {
  margin-top: 0.375rem !important;
}

.u-sMT-1-2 {
  margin-top: 0.75rem !important;
}

.u-sMT-3-4 {
  margin-top: 1.125rem !important;
}

.u-sMT-1 {
  margin-top: 1.5rem !important;
}

.u-sMT-1_1-2 {
  margin-top: 2.25rem !important;
}

.u-sMT-2 {
  margin-top: 3rem !important;
}

/* Right */

.u-sMR-1-4 {
  margin-right: 0.375rem !important;
}

.u-sMR-1-2 {
  margin-right: 0.75rem !important;
}

.u-sMR-3-4 {
  margin-right: 1.125rem !important;
}

.u-sMR-1 {
  margin-right: 1.5rem !important;
}

.u-sMR-1_1-2 {
  margin-right: 2.25rem !important;
}

.u-sMR-2 {
  margin-right: 3rem !important;
}

/* Bottom */

.u-sMB-1-4 {
  margin-bottom: 0.375rem !important;
}

.u-sMB-1-2 {
  margin-bottom: 0.75rem !important;
}

.u-sMB-3-4 {
  margin-bottom: 1.125rem !important;
}

.u-sMB-1 {
  margin-bottom: 1.5rem !important;
}

.u-sMB-1_1-2 {
  margin-bottom: 2.25rem !important;
}

.u-sMB-2 {
  margin-bottom: 3rem !important;
}

/* Left */

.u-sML-1-4 {
  margin-left: 0.375rem !important;
}

.u-sML-1-2 {
  margin-left: 0.75rem !important;
}

.u-sML-3-4 {
  margin-left: 1.125rem !important;
}

.u-sML-1 {
  margin-left: 1.5rem !important;
}

.u-sML-1_1-2 {
  margin-left: 2.25rem !important;
}

.u-sML-2 {
  margin-left: 3rem !important;
}

/* Vertical */

.u-sMV-1-4 {
  margin-top: 0.375rem !important;
  margin-bottom: 0.375rem !important;
}

.u-sMV-1-2 {
  margin-top: 0.75rem !important;
  margin-bottom: 0.75rem !important;
}

.u-sMV-3-4 {
  margin-top: 1.125rem !important;
  margin-bottom: 1.125rem !important;
}

.u-sMV-1 {
  margin-top: 1.5rem !important;
  margin-bottom: 1.5rem !important;
}

.u-sMV-1_1-2 {
  margin-top: 2.25rem !important;
  margin-bottom: 2.25rem !important;
}

.u-sMV-2 {
  margin-top: 3rem !important;
  margin-bottom: 3rem !important;
}

/* Horizontal */

.u-sMH-1-4 {
  margin-left: 0.375rem !important;
  margin-right: 0.375rem !important;
}

.u-sMH-1-2 {
  margin-left: 0.75rem !important;
  margin-right: 0.75rem !important;
}

.u-sMH-3-4 {
  margin-left: 1.125rem !important;
  margin-right: 1.125rem !important;
}

.u-sMH-1 {
  margin-left: 1.5rem !important;
  margin-right: 1.5rem !important;
}

.u-sMH-1_1-2 {
  margin-left: 2.25rem !important;
  margin-right: 2.25rem !important;
}

.u-sMH-2 {
  margin-left: 3rem !important;
  margin-right: 3rem !important;
}

/**
 * Padding
 *
 * u-sP
 */

/* All */

.u-sP-1-4 {
  padding: 0.375rem !important;
}

.u-sP-1-2 {
  padding: 0.75rem !important;
}

.u-sP-3-4 {
  padding: 1.125rem !important;
}

.u-sP-1 {
  padding: 1.5rem !important;
}

.u-sP-1_1-2 {
  padding: 2.25rem !important;
}

.u-sP-2 {
  padding: 3rem !important;
}

/* Top */

.u-sPT-1-4 {
  padding-top: 0.375rem !important;
}

.u-sPT-1-2 {
  padding-top: 0.75rem !important;
}

.u-sPT-3-4 {
  padding-top: 1.125rem !important;
}

.u-sPT-1 {
  padding-top: 1.5rem !important;
}

.u-sPT-1_1-2 {
  padding-top: 2.25rem !important;
}

.u-sPT-2 {
  padding-top: 3rem !important;
}

/* Right */

.u-sPR-1-4 {
  padding-right: 0.375rem !important;
}

.u-sPR-1-2 {
  padding-right: 0.75rem !important;
}

.u-sPR-3-4 {
  padding-right: 1.125rem !important;
}

.u-sPR-1 {
  padding-right: 1.5rem !important;
}

.u-sPR-1_1-2 {
  padding-right: 2.25rem !important;
}

.u-sPR-2 {
  padding-right: 3rem !important;
}

/* Bottom */

.u-sPB-1-4 {
  padding-bottom: 0.375rem !important;
}

.u-sPB-1-2 {
  padding-bottom: 0.75rem !important;
}

.u-sPB-3-4 {
  padding-bottom: 1.125rem !important;
}

.u-sPB-1 {
  padding-bottom: 1.5rem !important;
}

.u-sPB-1_1-2 {
  padding-bottom: 2.25rem !important;
}

.u-sPB-2 {
  padding-bottom: 3rem !important;
}

/* Left */

.u-sPL-1-4 {
  padding-left: 0.375rem !important;
}

.u-sPL-1-2 {
  padding-left: 0.75rem !important;
}

.u-sPL-3-4 {
  padding-left: 1.125rem !important;
}

.u-sPL-1 {
  padding-left: 1.5rem !important;
}

.u-sPL-1_1-2 {
  padding-left: 2.25rem !important;
}

.u-sPL-2 {
  padding-left: 3rem !important;
}

/* Vertical */

.u-sPV-1-4 {
  padding-top: 0.375rem !important;
  padding-bottom: 0.375rem !important;
}

.u-sPV-1-2 {
  padding-top: 0.75rem !important;
  padding-bottom: 0.75rem !important;
}

.u-sPV-3-4 {
  padding-top: 1.125rem !important;
  padding-bottom: 1.125rem !important;
}

.u-sPV-1 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}

.u-sPV-1_1-2 {
  padding-top: 2.25rem !important;
  padding-bottom: 2.25rem !important;
}

.u-sPV-2 {
  padding-top: 3rem !important;
  padding-bottom: 3rem !important;
}

/* Horizontal */

.u-sPH-1-4 {
  padding-left: 0.375rem !important;
  padding-right: 0.375rem !important;
}

.u-sPH-1-2 {
  padding-left: 0.75rem !important;
  padding-right: 0.75rem !important;
}

.u-sPH-3-4 {
  padding-left: 1.125rem !important;
  padding-right: 1.125rem !important;
}

.u-sPH-1 {
  padding-left: 1.5rem !important;
  padding-right: 1.5rem !important;
}

.u-sPH-1_1-2 {
  padding-left: 2.25rem !important;
  padding-right: 2.25rem !important;
}

.u-sPH-2 {
  padding-left: 3rem !important;
  padding-right: 3rem !important;
}

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 * 2. Chrome (not Windows), Firefox, IE 10+
 * 3. Safari 7 and future browsers
 */

.u-textKern {
  text-rendering: optimizeLegibility;
  /* 1 */
  -webkit-font-feature-settings: "kern" 1;
     -moz-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1;
  /* 2 */
  -webkit-font-kerning: normal;
     -moz-font-kerning: normal;
          font-kerning: normal;
  /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  /* 2 */
}



.u-textUpper {
  text-transform: uppercase;
}

.u-textLower {
  text-transform: lowercase;
}

.u-textCapitalize {
  text-transform: capitalize;
}

.u-textInvert {
  color: rgb(242, 242, 242);
}

.u-textMuted {
  opacity: .6;
}

.u-textEmpty {
  color: rgb(144, 184, 197);
  font-weight: 600;
}

.u-textMicro {
  font-size: 0.75rem;
}

.u-textMini {
  font-size: 0.875rem;
}

.u-textMeta {
  font-size: 0.875rem;
  color: rgb(144, 184, 197);
}

.u-textLead {
  font-size: 1.5rem;
  font-weight: 300;
}

.u-textPrimary {
  color: #03A6D7;
}

.u-textSecondary {
  color: #20718A;
}

.u-textHighlight {
  color: #03A6D7;
}

.u-textSuccess {
  color: #5CCA7B;
}

.u-textUnsure {
  color: #E9DF1B;
}

.u-textNeutral {
  color: rgb(188, 212, 220);
}

.u-textWarning {
  color: #FFA800;
}

.u-textDanger {
  color: #FF3B3D;
}

.u-textPilcrow:before {
  content: '\00b6';
  color: rgb(188, 212, 220);
  padding: 0 0.1875rem;
}

.u-textTab {
  position: relative;
  display: inline-block;
  width: 1.2em;
  text-align: center;
}

.u-textTab:before {
  content: '\21E5';
  color: rgb(188, 212, 220);
}

.u-textSpace {
  position: relative;
}

.u-textSpace:before {
  position: absolute;
  content: '.';
  color: rgb(188, 212, 220);
}

/**
 * Components
 */

/** @define Grid; use strict */



/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 * 3. Ensure consistent default alignment.
 */

.Grid {
  display: block;
  /* 1 */
  font-size: 0;
  /* 2 */
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */
  text-align: left;
  /* 3 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  text-align: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  text-align: right;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle > .Grid-cell {
  vertical-align: middle;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom > .Grid-cell {
  vertical-align: bottom;
}

/**
 * Modifier: gutters
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.Grid--withGutter {
  margin: 0 -10px;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 10px;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font size change made in `Grid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */

.Grid-cell {
  box-sizing: border-box;
  display: inline-block;
  /* 1 */
  font-size: 1rem;
  /* 2 */
  margin: 0;
  padding: 0;
  text-align: left;
  /* 3 */
  vertical-align: top;
  /* 4 */
  width: 100%;
  /* 5 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  display: block;
  margin: 0 auto;
}

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}



::-webkit-input-placeholder {
  /* WebKit browsers */
  color: rgb(169, 191, 198);
}

:-moz-placeholder {
  /* Mozilla Firefox 4 to 18 */
  color: rgb(169, 191, 198);
}

::-moz-placeholder {
  /* Mozilla Firefox 19+ */
  color: rgb(169, 191, 198);
}

:-ms-input-placeholder {
  /* Internet Explorer 10+ */
  color: rgb(169, 191, 198);
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: none;
}

/* Reset buttons so they can be used like links */

button {
  background: transparent;
  border: 0;
  padding: 0;
  text-align: inherit;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

button:hover,
button:active {
  outline: none;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="time"],
input[type="url"],
textarea {
  -webkit-appearance: none;
  outline: none;
  box-sizing: border-box;
}



@charset 'UTF-8';

@-ms-viewport {
  width: device-width;
}

@viewport {
  width: device-width;
}

html {
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  box-sizing: border-box;
  color: #444c54;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  min-width: 320px;
  background: #ECEFF0;
}

:active,
:hover {
  outline: none;
}



/**
 * Headings
 *
 * Reset to default font size to allow easy reuse
 * Use extra classes for styling
 */

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 16px;
  margin: 0;
  color: #20718A;
}



a {
  color: #03A6D7;
  text-decoration: none;
  cursor: pointer;
}

a:hover {
  color: rgb(3, 149, 194);
}

a:active {
  color: rgb(2, 133, 172);
}



ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

ul:empty,
ol:empty {
  /* Hide empty lists */
  display: none;
}

dd {
  margin: 0;
}



img {
  max-width: 100%;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

figcaption {
  color: rgb(128, 128, 128);
}



hr {
  width: 100%;
  border: 0;
  border-bottom: 1px solid;
  border-color: rgba(32, 113, 138, 0.12);
  margin: rhythm(1) 0;
  background: transparent;
}

iframe {
  border: 0;
}

/**
 * Suppress the focus outline on links that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}



code,
kbd,
pre,
samp {
  font-family: Monaco, Courier, monospace;
  font-size: 0.8125rem;
  font-weight: 400;
  margin: 0;
  padding: 0 0.1875rem;
  color: rgb(77, 77, 77);
}

blockquote,
dl,
dd,
p,
pre {
  margin: 0;
}

kbd {
  margin: 0 0.1875rem;
  padding: 0.1875rem 0.5625rem;
  border: 1px solid rgba(65, 105, 136, 0.07);
  border-bottom: 3px solid rgba(65, 105, 136, 0.2);
  border-radius: 0.375rem;
  background-color: #fff;
  background-clip: padding;
  white-space: nowrap;
  display: inline-block;
  text-transform: uppercase;
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
}

/** @define ButtonGroup; use strict */

/** @define ButtonGroup */

/*! suit-button-group v2.2.0 | MIT License | github.com/suitcss */



/**
 * Create a visual connection between UI actions that belong together.
 * Must only contain `ButtonGroup-item` objects as children.
 *
 * Example HTML:
 *
 * <div class="ButtonGroup [ButtonGroup--hz]">
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Dashboard</a>
 *   </div>
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Account</a>
 *   </div>
 *   <div class="ButtonGroup-item">
 *     <a class="Button" href="#">Logout</a>
 *   </div>
 * </div>
 */

/**
 * Button group
 *
 * 1. Ensure component is full-width if applied to elements that are
 *    `inline-block` by default.
 * 2. Collapse whitespace between child elements. Only necessary for the
 *    `ButtonGroup--hz` modifier which lays items out as `inline-block`, but
 *    included in the base component so that affects on `font-size` are
 *    consistent.
 * 3. Remove any default styles that might be present when `ol` or `ul` are the
 *    root element.
 */

.ButtonGroup {
  display: block;
  /* 1 */
  font-size: 0;
  /* 2 */
  margin: 0;
  /* 3 */
  list-style: none;
  /* 3 */
  padding: 0;
  /* 3 */
}

/**
 * Button group item
 *
 * 1. Make it full-width if applied to elements that are `inline-block` by
 *    default.
 * 2. Reset the font size of the buttons to the root font size.
 */

.ButtonGroup-item {
  display: block;
  /* 1 */
  font-size: 1rem;
  /* 2 */
}

.ButtonGroup-item > .Button {
  display: block;
  width: 100%;
}

/**
 * Ensure that interactions with a button make it sit on top of other buttons
 * in the group.
 */

.ButtonGroup-item > .Button:hover,
.ButtonGroup-item > .Button:focus,
.ButtonGroup-item > .Button:active,
.ButtonGroup-item > .Button.is-pressed {
  z-index: 1;
}

/* Modifier: horizontal buttons
   ========================================================================== */

.ButtonGroup--hz > .ButtonGroup-item {
  display: inline-block;
}

/** @define ButtonGroup */

/*! suit-button-group v2.2.0 | MIT License | github.com/suitcss */

/* Modifier: collapse button borders
   ========================================================================== */

/**
 * Includes appropriate removal of `border-radius`.
 * All browsers that support `border-radius` also support CSS 3 pseudo-classes.
 */

/**
 * Vertical collapse
 */

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item {
  margin-top: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:first-child {
  margin-top: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:not(:first-child):not(:last-child) > .Button {
  border-radius: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:first-child:not(:only-child) > .Button {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.ButtonGroup--borderCollapse:not(.ButtonGroup--hz) > .ButtonGroup-item:last-child:not(:only-child) > .Button {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

/**
 * Horizontal collapse
 */

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item {
  margin-left: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:first-child {
  margin-left: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:not(:first-child):not(:last-child) > .Button {
  border-radius: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:first-child:not(:only-child) > .Button {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

.ButtonGroup--borderCollapse.ButtonGroup--hz > .ButtonGroup-item:last-child:not(:only-child) > .Button {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

:root {
  /* Set our vars in correct format */
  /* From suitcss-components-button-group */
}

.ButtonGroup--hz > .ButtonGroup-item {
  vertical-align: middle;
}

.ButtonGroup--round .ButtonGroup-item:first-child .Button {
  border-top-left-radius: 100px;
  border-bottom-left-radius: 100px;
}

.ButtonGroup--round .ButtonGroup-item:last-child .Button {
  border-top-right-radius: 100px;
  border-bottom-right-radius: 100px;
}

/** @define Button; use strict */

/** @define Button; use strict */



/**
 * The button classes are best applied to links, buttons, and submit inputs.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Corrects inability to style clickable `input` types in iOS.
 * 2. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 3. Inherit text color from ancestor.
 * 4. Inherit font styles from ancestor.
 * 5. Normalize `line-height`. For `input`, it can't be changed from `normal` in Firefox 4+.
 * 6. Prevent button text from being selectable.
 * 7. Make sure `input` will wrap text across multiple lines.
 */

.Button {
  -webkit-appearance: none;
  /* 1 */
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 0;
  box-sizing: border-box;
  /* 2 */
  color: transparent;
  /* 3 */
  cursor: pointer;
  display: inline-block;
  font: inherit;
  /* 4 */
  line-height: normal;
  /* 5 */
  margin: 0;
  padding: 0.1875rem 0.75rem;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  /* 6 */
  white-space: normal;
  /* 7 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

/**
 * UI states
 */

.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none;
}

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: 0.6;
}



.Button {
  -webkit-transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
          transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
  min-height: 1.875rem;
  text-shadow: 1px 1px 0 rgba(0,0,0,0.15);
}

.Button:disabled,
.Button.is-disabled {
  pointer-events: none;
}

.Button:hover,
.Button:active,
.Button.is-active {
  outline: inherit;
}

/* Default */

.Button--default {
  background-color: rgb(222, 234, 237);
}

.Button--default:hover {
  background-color: rgb(200, 211, 213);
}

.Button--default:active,
.Button--default.is-active {
  background-color: rgb(189, 199, 201);
}

/**
 * Color Modifiers
 */

/* Primary */

.Button--primary {
  color: #fff;
  background-color: #03A6D7;
}

.Button--primary:hover {
  background-color: rgb(3, 149, 194);
}

.Button--primary:active,
.Button--primary.is-active {
  background-color: rgb(3, 141, 183);
}

/* Secondary */

.Button--secondary {
  color: #fff;
  background-color: #20718A;
}

.Button--secondary:hover {
  background-color: rgb(29, 102, 124);
}

.Button--secondary:active,
.Button--secondary.is-active {
  background-color: rgb(27, 96, 117);
}

/* Hightlight */

.Button--highlight {
  color: #fff;
  background-color: #03A6D7;
}

.Button--highlight:hover {
  background-color: rgb(3, 149, 194);
}

.Button--highlight:active,
.Button--highlight.is-active {
  background-color: rgb(3, 141, 183);
}

/* Success */

.Button--success {
  color: #fff;
  background-color: #5CCA7B;
}

.Button--success:hover {
  background-color: rgb(83, 182, 111);
}

.Button--success:active,
.Button--success.is-active {
  background-color: rgb(78, 172, 105);
}

/* Unsure */

.Button--unsure {
  color: #fff;
  background-color: #E9DF1B;
}

.Button--unsure:hover {
  background-color: rgb(210, 201, 24);
}

.Button--unsure:active,
.Button--unsure.is-active {
  background-color: rgb(198, 190, 23);
}

/* Neutral */

.Button--neutral {
  color: #fff;
  background-color: rgb(144, 184, 197);
}

.Button--neutral:hover {
  background-color: rgb(130, 166, 177);
}

.Button--neutral:active,
.Button--neutral.is-active {
  background-color: rgb(122, 156, 167);
}

/* Warning */

.Button--warning {
  color: #fff;
  background-color: #FFA800;
}

.Button--warning:hover {
  background-color: rgb(230, 151, 0);
}

.Button--warning:active,
.Button--warning.is-active {
  background-color: rgb(217, 143, 0);
}

/* Danger */

.Button--danger {
  color: #fff;
  background-color: #FF3B3D;
}

.Button--danger:hover {
  background-color: rgb(230, 53, 55);
}

.Button--danger:active,
.Button--danger.is-active {
  background-color: rgb(217, 50, 52);
}

/* Invisible */

.Button--invisible {
  background-color: transparent;
  color: rgb(144, 184, 197);
}

.Button--invisible:hover {
  background-color: rgb(237, 244, 246);
  color: rgb(99, 156, 173);
}

.Button--invisible:active,
.Button--invisible.is-active {
  color: #20718A;
  background-color: rgb(228, 238, 241);
}

/**
 * Button Type Modifiers
 */

/* Snug */

.Button--snug {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.Button--small {
  min-height: 1.5rem;
  padding: 0.1875rem 0.75rem;
  font-size: 0.875rem;
}

/** @define InputGroup; use strict */



.InputGroup {
  position: relative;
  display: table;
  border-collapse: separate;
}

.InputGroup-input,
.InputGroup-addon,
.InputGroup-button {
  display: table-cell;
  -webkit-transition: 0.2s cubic-bezier(.26, .47, .36, .94);
          transition: 0.2s cubic-bezier(.26, .47, .36, .94);
}

.InputGroup-input,
.InputGroup-addon {
  background-color: transparent;
  padding: 0 0.375rem;
}

.InputGroup-input {
  border: none;
  width: 100%;
  color: #20718A;
}

.InputGroup-addon {
  color: rgb(99, 156, 173);
  text-align: center;
  width: 1%;
  white-space: nowrap;
  vertical-align: middle;
}

.InputGroup-addon:before {
  content: ' ';
}

.InputGroup.is-focused .InputGroup-input,
.InputGroup.is-focused .InputGroup-addon {
  background-color: #fff;
}

.InputGroup--bordered .InputGroup-input,
.InputGroup--bordered .InputGroup-addon,
.InputGroup--outlined .InputGroup-input,
.InputGroup--outlined .InputGroup-addon {
  border-top: 1px solid rgb(166, 198, 208);
  border-bottom: 1px solid rgb(166, 198, 208);
}

.InputGroup--bordered .InputGroup-input {
  border-left: 1px solid rgb(166, 198, 208);
  border-right: 1px solid rgb(166, 198, 208);
}

.InputGroup--outlined .InputGroup-input:first-child,
.InputGroup--outlined .InputGroup-addon:first-child {
  border-left: 1px solid rgb(166, 198, 208);
}

.InputGroup--outlined .InputGroup-input:last-child,
.InputGroup--outlined .InputGroup-addon:last-child {
  border-right: 1px solid rgb(166, 198, 208);
}

.InputGroup--bordered.is-focused .InputGroup-input,
.InputGroup--bordered.is-focused .InputGroup-addon,
.InputGroup--outlined.is-focused .InputGroup-input,
.InputGroup--outlined.is-focused .InputGroup-addon {
  border-color: rgb(99, 156, 173);
}

.InputGroup--rounded .InputGroup-input:first-child,
.InputGroup--rounded .InputGroup-addon:first-child {
  border-bottom-left-radius: 1.5rem;
  border-top-left-radius: 1.5rem;
  padding-left: 0.5625rem;
}

.InputGroup--rounded .InputGroup-input:last-child,
.InputGroup--rounded .InputGroup-addon:last-child {
  border-bottom-right-radius: 1.5rem;
  border-top-right-radius: 1.5rem;
  padding-right: 0.5625rem;
}

/** @define Dropdown; use strict */



.Dropdown {
  position: relative;
  z-index: 100;
  display: inline-block;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Dropdown.is-active {
  z-index: 900;
}

.Dropdown-toggleIcon {
  display: inline-block;
  -webkit-transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
  text-align: center;
}

.Dropdown.is-active .Dropdown-toggleIcon {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}

.Dropdown-content {
  position: absolute;
  z-index: 800;
  top: 100%;
  left: 0;
  visibility: hidden;
  float: left;
  min-width: 100%;
  margin: 0;
  padding: 0;
  -webkit-transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .2s cubic-bezier(.175, .885, .320, 1.275);
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  text-align: left;
  opacity: 0;
  background-color: #fff;
  background-clip: padding-box;
  box-shadow: 0 0 1.5rem rgba(0,0,0,0.1);
}

.Dropdown-content--Bordered {
  border: 1px solid rgba(32, 113, 138, 0.12);
  border-bottom-width: 2px;
}

.Dropdown.is-active > .Dropdown-content {
  visibility: visible;
  -webkit-transform: translateY(0);
      -ms-transform: translateY(0);
          transform: translateY(0);
  opacity: 1;
}

.Dropdown-title {
  font-size: 0.875rem;
  padding: 0.1875rem 0.375rem;
  background-color: transparent;
  border-bottom: 1px solid rgba(32, 113, 138, 0.12);
  color: rgb(121, 170, 185);
}

.Dropdown-item {
  display: block;
  padding: 0.1875rem 0.375rem;
  -webkit-transition: all .2s ease-out;
          transition: all .2s ease-out;
  color: #03A6D7;
}

.Dropdown-item:hover {
  color: #fff;
  background-color: #03A6D7;
}

/**
 * Modifiers
 */

.Dropdown--right .Dropdown-content {
  left: auto;
  right: 0;
}

/** @define Header; use strict */



.Header {
  background-color: #03A6D7;
  position: fixed;
  z-index: 100;
  width: 100%;
  top: 0;
  box-shadow: 0 0.375rem 1.5rem rgba(0,0,0,0.1);
}

.Header-item {
  height: 3rem;
  display: inline-block;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.Header-avatar {
  margin-top: 0.5625rem;
  margin-bottom: 0.5625rem;
  width: 1.875rem;
  height: 1.875rem;
  display: inline-block;
}

/** @define Heading; use strict */



.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  font-weight: 600;
}

.h1 {
  font-size: 36px;
}

.h2 {
  font-size: 28px;
}

.h3 {
  font-size: 24px;
}

.h4 {
  font-size: 20px;
}

.h5 {
  font-size: 18px;
}

.h6 {
  font-size: 16px;
}

.Heading--panel {
  font-size: 1rem;
  font-weight: 400;
  margin: 0;
  text-transform: uppercase;
}

/** @define Icon; use strict */



.Icon {
  text-align: center;
  display: inline-block;
  -webkit-transition: .25s all cubic-bezier(.175, .885, .320, 1.275);
          transition: .25s all cubic-bezier(.175, .885, .320, 1.275);
}

.Icon.is-rotated {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}

.Icon-item {
  vertical-align: -25%;
  display: inline-block;
  width: 1.5rem;
  height: 1.5rem;
  fill: currentColor !important;
}

.Icon--xlg .Icon-item {
  width: 3rem;
  height: 3rem;
}

.Icon--lg .Icon-item {
  width: 2.25rem;
  height: 2.25rem;
}

.Icon--sm .Icon-item {
  vertical-align: -15%;
  width: 1.125rem;
  height: 1.125rem;
}

.Icon--xsm .Icon-item {
  vertical-align: -10%;
  width: 0.9375rem;
  height: 0.9375rem;
}

.Icon--circle {
  position: relative;
  padding: 0.75rem;
}

.Icon--circle:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid;
  opacity: .2;
  border-radius: 3rem;
}

.Icon--circle.Icon--lg,
.Icon--circle.Icon--xlg {
  border-width: 3px;
  padding: 1.125rem;
}

.Icon--circle.Icon--lg {
  padding: 0.9375rem;
}

.Icon--circle.Icon--sm,
.Icon--circle.Icon--xsm {
  border-width: 1px;
  padding: 0.5625rem;
}

.Icon--circle.Icon--xsm {
  padding: 0.375rem;
}

.Icon--stroked .Icon-item {
  fill: none;
  stroke: currentColor;
  stroke-width: 3;
}

/* Loader Icon */

.Icon--loader .Icon-item {
  position: relative;
}

.Icon--loader-dot {
  position: absolute;
  left: 0;
  top: 36.1%;
  display: inline-block;
  width: 27.8%;
  height: 27.8%;
  -webkit-animation: bouncedelay .9s infinite cubic-bezier(.175, .885, .320, 1.275);
          animation: bouncedelay .9s infinite cubic-bezier(.175, .885, .320, 1.275);
  border-radius: 3rem;
  background-color: currentColor;
  /* Prevent first frame from flickering when animation starts */
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.Icon--loader-dot:nth-of-type(2) {
  left: 36.1%;
  -webkit-animation-delay: .15s;
          animation-delay: .15s;
}

.Icon--loader-dot:nth-of-type(3) {
  right: 0;
  left: auto;
  -webkit-animation-delay: .3s;
          animation-delay: .3s;
}

@-webkit-keyframes bouncedelay {
  0%, 90%, 100% {
    -webkit-transform: scale(0, 0);
            transform: scale(0, 0);
    opacity: .2;
  }

  40% {
    -webkit-transform: scale(1, 1);
            transform: scale(1, 1);
    opacity: 1;
  }
}

@keyframes bouncedelay {
  0%, 90%, 100% {
    -webkit-transform: scale(0, 0);
            transform: scale(0, 0);
    opacity: .2;
  }

  40% {
    -webkit-transform: scale(1, 1);
            transform: scale(1, 1);
    opacity: 1;
  }
}

/** @define Links; use strict */



/**
 * Default
 *
 * Make anything look like a link
 */

.Link {
  color: #03A6D7;
  text-decoration: none;
  cursor: pointer;
}

.Link:hover {
  color: rgb(3, 149, 194);
}

.Link:active {
  color: rgb(2, 133, 172);
}

/* Invert */

.Link--invert {
  opacity: 0.8;
}

.Link--invert,
.Link--invert:hover {
  color: #fff !important;
}

.Link--invert:hover {
  opacity: 1;
}

.Link--invert:active,
.Link--invert.is-active {
  opacity: 0.6;
}

/* Success */

.Link--success {
  color: #5CCA7B !important;
}

.Link--success:hover {
  color: rgb(64, 141, 86) !important;
}

.Link--success:active,
.Link--success.is-active {
  color: rgb(37, 81, 49) !important;
}

/* Unsure */

.Link--unsure {
  color: #E9DF1B !important;
}

.Link--unsure:hover {
  color: rgb(163, 156, 19) !important;
}

.Link--unsure:active,
.Link--unsure.is-active {
  color: rgb(93, 89, 11) !important;
}

/* Neutral */

.Link--neutral {
  color: rgb(188, 212, 220) !important;
}

.Link--neutral:hover {
  color: rgb(132, 148, 154) !important;
}

.Link--neutral:active,
.Link--neutral.is-active {
  color: rgb(75, 85, 88) !important;
}

/* Warning */

.Link--warning {
  color: #FFA800 !important;
}

.Link--warning:hover {
  color: rgb(179, 118, 0) !important;
}

.Link--warning:active,
.Link--warning.is-active {
  color: rgb(102, 67, 0) !important;
}

/* Danger */

.Link--danger {
  color: #FF3B3D !important;
}

.Link--danger:hover {
  color: rgb(179, 41, 43) !important;
}

.Link--danger:active,
.Link--danger.is-active {
  color: rgb(102, 24, 24) !important;
}



.Difference {
  display: inline-block;
  padding: 0 2px;
  border-radius: 2px;
}

.Difference ins {
  background-color: rgb(201, 238, 211);
  text-decoration: none;
}

.Difference del {
  background-color: rgb(255, 224, 224);
  text-decoration: none;
}

/** @define LogoLoader; use strict */



.LogoLoader {
  position: relative;
  display: inline-block;
  margin-top: -0.09375rem;
  width: 2.4375rem;
  height: 2.4375rem;
  color: #fff;
  border-radius: 100px;
}

.LogoLoader svg {
  overflow: visible;
}

.LogoLoader--inverted {
  color: #03A6D7;
}

.LogoLoader-logo {
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
  fill: currentColor;
}

.LogoLoader path {
  -webkit-transform-origin: 50% 50% 0;
      -ms-transform-origin: 50% 50% 0;
          transform-origin: 50% 50% 0;
}

.LogoLoader:hover .LogoLoader-z {
  -webkit-animation: pop .3s cubic-bezier(.175, .885, .320, 1.275);
          animation: pop .3s cubic-bezier(.175, .885, .320, 1.275);
  -webkit-animation-iteration-count: 2;
          animation-iteration-count: 2;
  -webkit-animation-direction: alternate;
          animation-direction: alternate;
}

.LogoLoader-z {
  -webkit-transform: scale(1,1);
      -ms-transform: scale(1,1);
          transform: scale(1,1);
  -webkit-transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
          transition: all .25s cubic-bezier(.175, .885, .320, 1.275);
}

.LogoLoader .LogoLoader-logo {
  -webkit-transform-origin: 50% 50% 0;
      -ms-transform-origin: 50% 50% 0;
          transform-origin: 50% 50% 0;
  /*transform: scale(.8, .8);*/
}

.LogoLoader .LogoLoader-circle,
.LogoLoader .LogoLoader-circlePulse {
  -webkit-transform: scale(1, 1);
      -ms-transform: scale(1, 1);
          transform: scale(1, 1);
}

.LogoLoader.is-loading .LogoLoader-z {
  -webkit-animation: pulseBegin 1s infinite linear;
          animation: pulseBegin 1s infinite linear;
}

.LogoLoader.is-loading .LogoLoader-circle {
  -webkit-animation: pulseBegin 1s infinite linear;
          animation: pulseBegin 1s infinite linear;
  -webkit-animation-delay: .1s;
          animation-delay: .1s;
}

.LogoLoader.is-loading .LogoLoader-circlePulse {
  -webkit-animation: pulse 1s infinite linear;
          animation: pulse 1s infinite linear;
  -webkit-animation-delay: .1s;
          animation-delay: .1s;
}

@-webkit-keyframes rotate {
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes rotate {
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@-webkit-keyframes pulseBegin {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  20% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }

  60% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@keyframes pulseBegin {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  20% {
    -webkit-transform: scale(.6);
            transform: scale(.6);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
  }

  60% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  100% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
    opacity: 0;
  }

  20% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
    opacity: 0.5;
  }

  60% {
    -webkit-transform: scale(1.6);
            transform: scale(1.6);
    opacity: 0.7;
  }

  100% {
    -webkit-transform: scale(2);
            transform: scale(2);
    opacity: 0.0;
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1);
    opacity: 0;
  }

  20% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }

  40% {
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
    opacity: 0.5;
  }

  60% {
    -webkit-transform: scale(1.6);
            transform: scale(1.6);
    opacity: 0.7;
  }

  100% {
    -webkit-transform: scale(2);
            transform: scale(2);
    opacity: 0.0;
  }
}

@-webkit-keyframes pop {
  to {
    -webkit-transform: rotate(15deg) scale(1.1, 1.1);
            transform: rotate(15deg) scale(1.1, 1.1);
  }
}

@keyframes pop {
  to {
    -webkit-transform: rotate(15deg) scale(1.1, 1.1);
            transform: rotate(15deg) scale(1.1, 1.1);
  }
}

/** @define Progressbar; use strict */



.Progressbar {
  position: relative;
  width: 100%;
  height: 0.75rem;
  margin: 0;
  background-color: rgb(188, 212, 220);
}

.Progressbar--sm {
  height: 0.375rem;
}

.Progressbar--lg {
  height: 1.5rem;
}

.Progressbar-item {
  position: absolute;
  left: 0;
  z-index: 100;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  list-style: none;
}

.Progressbar-approved {
  background-color: #03A6D7;
  z-index: 200;
}

.Progressbar-translated {
  background-color: #5CCA7B;
}

.Progressbar-needsWork {
  background-color: #E9DF1B;
}

.Progressbar-untranslated {
  background-color: rgb(188, 212, 220);
}



.Modal {
  position: fixed;
  z-index: 1000;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: block;
  visibility: hidden;
  overflow: auto;
  overflow-y: scroll;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  padding: 4.5rem 1.5rem 1.5rem;
  -webkit-transition: all .15s linear;
          transition: all .15s linear;
  opacity: 0;
  background-color: rgba(236, 239, 240, 0.95);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-perspective: 75rem;
          perspective: 75rem;
  -webkit-overflow-scrolling: touch;
}

.Modal.is-active {
  visibility: visible;
  opacity: 1;
}

.Modal-dialog {
  position: absolute;
  position: relative;
  width: 90%;
  top: 50%;
  left: 50%;
  max-height: 100%;
  min-width: 300px;
  max-width: 45rem;
  -webkit-transition: all .25s cubic-bezier(.175, .885, .320, 1.1);
          transition: all .25s cubic-bezier(.175, .885, .320, 1.1);
  -webkit-transform: translateX(-50%) translateY(100%);
      -ms-transform: translateX(-50%) translateY(100%);
          transform: translateX(-50%) translateY(100%);
  -webkit-transform-origin: 0;
      -ms-transform-origin: 0;
          transform-origin: 0;
  background-color: rgb(247, 249, 249);
}

.Modal.is-active .Modal-dialog {
  -webkit-transform: translateX(-50%) translateY(-50%);
      -ms-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
}

.Modal-header {
  position: fixed;
  top: -3rem;
  left: 0;
  right: 0;
  border: 1px solid rgba(32, 113, 138, 0.12);
  background-color: #fff;
  z-index: 100;
}

.Modal-title {
  font-size: 1.375rem;
  font-weight: 300;
  line-height: 1.5rem;
  margin: 0;
  padding: 0.75rem 2.25rem 0.75rem 1.5rem;
}

.Modal-close {
  position: absolute;
  top: 0;
  right: 0;
  width: 3rem;
  height: 3rem;
  -webkit-transition: all .25s ease-out;
          transition: all .25s ease-out;
  text-align: center;
  border-left: 1px solid rgba(32, 113, 138, 0.12);
}

.Modal-close:hover {
  background-color: rgba(32, 113, 138, 0.05);
}

.Modal-close:active {
  background-color: rgba(32, 113, 138, 0.1);
}

.Modal-content {
  position: relative;
  max-height: 100%;
  overflow: auto;
  background-clip: padding-box;
  border: 1px solid rgba(32, 113, 138, 0.12);
  border-top-color: transparent;
  border-bottom-width: 2px;
}

/* body */

.Modal-container.is-modal {
  overflow: hidden;
  height: 100%;
}

/** @define Toggle; use strict */



.Toggle,
.Toggle-label {
  cursor: pointer;
}

.Toggle {
  position: relative;
  display: inline-block;
  min-width: 2.0625rem;
  margin: 0 0.09375rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: top;
}

.Toggle-checkbox {
  position: absolute;
  cursor: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

.Toggle-label {
  font-weight: 600;
  display: block;
  position: relative;
  padding: 0 0.5625rem;
  -webkit-transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
          transition: all .25s cubic-bezier(.075, .820, .165, 1.000);
  text-align: center;
  color: currentColor;
}

.Toggle-fakeCheckbox {
  opacity: 1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: '';
  background-color: transparent;
}

.Toggle:hover > .Toggle-fakeCheckbox,
.Toggle-checkbox:focus ~ .Toggle-fakeCheckbox {
  background-color: currentColor;
  opacity: .2;
}

.Toggle-checkbox:checked ~ .Toggle-label,
.Toggle.is-active ~ .Toggle-label {
  color: #fff;
}

.Toggle-checkbox:checked ~ .Toggle-fakeCheckbox,
.Toggle.is-active > .Toggle-fakeCheckbox {
  background-color: currentColor;
}

.Toggle:hover > .Toggle-checkbox:checked ~ .Toggle-fakeCheckbox,
.Toggle-checkbox:checked:focus ~ .Toggle-fakeCheckbox,
.Toggle.is-active:hover > .Toggle-fakeCheckbox {
  opacity: .8;
}

/** @define Switch; use strict */

/*

<span class="Switch">
  <input type="checkbox" class="Switch-checkbox" />
  <label class="Switch-label">
    <span class="Switch-labelText">Switch</span>
  </label>
</span>

*/



.Switch {
  padding-left: 2.25rem;
  position: relative;
}

.Switch-checkbox {
  position: absolute;
  margin-left: -9999px;
  visibility: hidden;
}

.Switch-label {
  cursor: pointer;
}

.Switch-label:before,
.Switch-label:after {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  border-radius: 1.125rem;
  -webkit-transition: all .2s ease-out;
          transition: all .2s ease-out;
}

.Switch-label:before {
  width: 1.875rem;
  height: 1.125rem;
  background-color: rgb(210, 227, 232);
}

.Switch-label:after {
  width: 1.125rem;
  height: 1.125rem;
  background-color: rgb(121, 170, 185);
  border: 1px solid transparent;
  -webkit-transform: translateY(-50%) scale(.8, .8);
      -ms-transform: translateY(-50%) scale(.8, .8);
          transform: translateY(-50%) scale(.8, .8);
}

.Switch-labelText {
  color: rgb(121, 170, 185);
  font-size: 0.875rem;
}

.Switch-checkbox:checked ~ .Switch-label:before {
  background-color: #20718A;
}

.Switch-checkbox:checked ~ .Switch-label:after {
  background-color: #fff;
  -webkit-transform: translateY(-50%) translateX(66%) scale(.8, .8);
      -ms-transform: translateY(-50%) translateX(66%) scale(.8, .8);
          transform: translateY(-50%) translateX(66%) scale(.8, .8);
}

.Switch-checkbox:checked ~ .Switch-label .Switch-labelText {
  color: #20718A;
}

/** @define TransUnit; use strict */



.TransUnit {
  position: relative;
  margin: 0;
  padding: 0;
  cursor: text;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border-bottom: 1px solid rgba(32, 113, 138, 0.12);
}

.TransUnit:focus {
  outline: 0;
  box-shadow: none;
}

.TransUnit.is-focused {
  z-index: 100 !important;
  opacity: 1 !important;
  background-color: #fff;
}

.TransUnit:before,
.TransUnit:after {
  position: absolute;
  z-index: -1;
  left: 0;
  visibility: hidden;
  width: 100%;
  height: 1.5rem;
  content: '';
  /*transition: var(--TransUnit-transition);*/
  -webkit-transform: scaleY(0);
      -ms-transform: scaleY(0);
          transform: scaleY(0);
  opacity: 0;
  background-color: #fff;
  background-clip: padding-box;
}

.TransUnit:before {
  box-shadow: 0 -0.375rem 0.75rem rgba(0,0,0,.04);
  -webkit-transform-origin: bottom;
      -ms-transform-origin: bottom;
          transform-origin: bottom;
  top: -1.125rem;
}

.TransUnit:after {
  box-shadow: 0 0.375rem 0.75rem rgba(0,0,0,.04);
  -webkit-transform-origin: top;
      -ms-transform-origin: top;
          transform-origin: top;
  bottom: -1.125rem;
}

.TransUnit.is-focused:before,
.TransUnit.is-focused:after {
  visibility: visible;
  -webkit-transform: scaleY(1);
      -ms-transform: scaleY(1);
          transform: scaleY(1);
  opacity: 1;
}

.TransUnit.is-first {
  border-top: 1px solid rgba(32, 113, 138, 0.12);
}

/* Pair with .Editor-content */

.TransUnit-container.is-unit-selected .TransUnit {
  opacity: .8;
}

/**
 * Panels
 */

.TransUnit-panel {
  position: relative;
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
  padding-left: 1.5rem;
  list-style: none;
  vertical-align: top;
}

.TransUnit-item {
  position: relative;
}

.TransUnit-source {
  cursor: pointer;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}

.TransUnit.is-focused .TransUnit-source {
  cursor: text;
}

.TransUnit-translation {
  cursor: text;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
}

/**
 * Translation and source Header and Footer
 */

.TransUnit-panelHeader,
.TransUnit-panelFooter,
.TransUnit-itemHeader {
  position: absolute;
  z-index: 200;
  right: 0;
  left: 0;
  width: 100%;
  padding-right: 1.125rem;
  padding-left: 1.125rem;
  cursor: default;
}

.TransUnit-panelHeader,
.TransUnit-panelFooter {
  visibility: hidden;
  /*transition: var(--TransUnit-transition);*/
  opacity: 0;
}

.TransUnit.is-focused .TransUnit-panelHeader,
.TransUnit.is-focused .TransUnit-panelFooter {
  visibility: visible;
  opacity: 1;
}

.TransUnit-panelHeader {
  top: -1.125rem;
}

.TransUnit-itemHeader {
  top: 0;
}

.TransUnit-panelFooter {
  bottom: -1.125rem;
}

.TransUnit-heading {
  font-size: 1rem;
  font-weight: 400;
  line-height: 2.25rem;
  display: inline-block;
  float: left;
  margin: 0;
  vertical-align: top;
  text-transform: uppercase;
}

.TransUnit-text {
  font-family: 'Source Sans Pro', "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  overflow: hidden;
  width: 100%;
  min-height: 1.5rem;
  margin: 0;
  padding: 1.125rem;
  resize: none;
  -webkit-transition: height .1s cubic-bezier(.075, .820, .165, 1.000);
          transition: height .1s cubic-bezier(.075, .820, .165, 1.000);
  white-space: pre-wrap;
  word-wrap: break-word;
  -moz-tab-size: 8;
       tab-size: 8;
  color: #444c54;
  border: none;
  background-color: transparent;
  box-shadow: none;
  -webkit-appearance: none;
}

.TransUnit-text:focus {
  border: none;
  outline: none;
  background-color: transparent;
}

/**
 * Override text highlighting changing text format
 * otherwise it won't align
 */

.TransUnit-text span {
  font-weight: 400 !important;
  font-style: normal !important;
}

/**
 * Status bar
 */

.TransUnit-status,
.TransUnit-status:before,
.TransUnit-status:after {
  position: absolute;
  z-index: 200;
  left: 0;
  width: 1.5rem;
  background-color: rgb(188, 212, 220);
}

.TransUnit-status {
  top: -1;
  bottom: -1;
}

.TransUnit-status.is-loading,
.TransUnit-status.is-loading:before {
  background-image: -webkit-repeating-linear-gradient(45deg, transparent, transparent 0.375rem, rgba(255,255,255,.5) 0.375rem, rgba(255,255,255,.5) 0.75rem);
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 0.375rem,
    rgba(255,255,255,.5) 0.375rem,
    rgba(255,255,255,.5) 0.75rem
  );
  background-size: 100% 1000px;
  -webkit-animation: loading 7s linear;
          animation: loading 7s linear;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.TransUnit-status:before {
  top: -1.125rem;
  height: 100%;
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
  box-sizing: content-box;
  z-index: 300;
  visibility: hidden;
  content: '';
  -webkit-transform: scaleY(.65);
      -ms-transform: scaleY(.65);
          transform: scaleY(.65);
}

.TransUnit-status:after {
  -webkit-transition: none;
          transition: none;
  z-index: 400;
  top: 0;
  box-sizing: content-box;
  width: 1.3125rem;
  height: 100%;
  content: '';
  background-color: #fff;
  opacity: .6;
}

.TransUnit.is-focused .TransUnit-status:before {
  visibility: visible;
  -webkit-transform: scaleY(1);
      -ms-transform: scaleY(1);
          transform: scaleY(1);
}

.TransUnit.is-focused .TransUnit-status:after {
  top: -1.125rem;
  padding-top: 1.125rem;
  padding-bottom: 1.125rem;
  opacity: .8;
}

/**
 * Meta data
 */

.TransUnit-metaData {
  position: relative;
  right: 0;
  left: 0;
  height: 100%;
  text-align: center;
}

.TransUnit-metaDataItem {
  line-height: 1.125rem;
}

.TransUnit-metaDataButton {
  font-size: 0.75rem;
  line-height: 0.6000000000000001rem;
  opacity: .8;
}

.TransUnit-metaDataButton:hover {
  opacity: 1;
}

.TransUnit-metaDataComments,
.TransUnit-metaDataErrors {
  position: absolute;
  right: 0;
  left: 0;
}

.TransUnit-metaDataComments {
  top: 1.125rem;
}

.TransUnit-metaDataErrors {
  top: 2.625rem;
}

.TransUnit-metaDataErrorsIcon {
  text-shadow: 0 0 2px #fff;
}

/**
 * Small Size Down
 */

@media (min-width:0) and (max-width:740px) {
  .TransUnit-Heading {
    padding-left: 1.5rem;
  }

  .TransUnit-panelFooterLeftNav {
    padding-left: 1.5rem;
  }
}

/**
 * Medium Size Up
 */

@media (min-width:741px) {
  .TransUnit,
  .TransUnit-item {
    display: table;
    width: 100%;
    table-layout: fixed;
  }

  .TransUnit-panel {
    display: table-cell;
    width: 50%;
    padding-left: 0;
  }

  .TransUnit-source {
    padding-right: 0.75rem;
  }

  .TransUnit-translation {
    padding-left: 0.75rem;
  }

  /* Cover the overlapping headers */

  .TransUnit-panelHeader--source,
  .TransUnit-panelFooter--source {
    padding-right: 1.875rem;
    right: auto;
  }

  .TransUnit-panelHeader--translation,
  .TransUnit-panelFooter--translation {
    padding-left: 1.875rem;
    left: auto;
  }

  .TransUnit-status,
  .TransUnit-status:before,
  .TransUnit-status:after {
    left: 50%;
    margin-left: -0.75rem;
  }
}

/**
 * Status bar Modifiers
 */

.TransUnit--highlight .TransUnit-status,
.TransUnit--highlight .TransUnit-status:before {
  background-color: #03A6D7;
}

.TransUnit--success .TransUnit-status,
.TransUnit--success .TransUnit-status:before {
  background-color: #5CCA7B;
}

.TransUnit--unsure .TransUnit-status,
.TransUnit--unsure .TransUnit-status:before {
  background-color: #E9DF1B;
}

.TransUnit--warning .TransUnit-status,
.TransUnit--warning .TransUnit-status:before {
  background-color: #FFA800;
}

.TransUnit--danger .TransUnit-status,
.TransUnit--danger .TransUnit-status:before {
  background-color: #FF3B3D;
}

.TransUnit--secondary .TransUnit-status,
.TransUnit--secondary .TransUnit-status:before {
  background-color: #20718A;
}

/**
 * Type Modifiers
 */

.TransUnit--suggestion:hover {
  background-color: rgb(245, 246, 247);
}

.TransUnit--suggestion .TransUnit-panel {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.TransUnit--suggestion .TransUnit-item,
.TransUnit--suggestion .TransUnit-details {
  padding-left: 1.125rem;
  padding-right: 1.125rem;
}

.TransUnit--suggestion .TransUnit-itemHeader {
  margin-top: -1.125rem;
}

/**
 * If there is more than 1 TransUnit-item
 * Includes 1 the details div in count, hence the 3 instead of 2
 */

.TransUnit--suggestion .TransUnit-item:nth-last-child(n+3):first-child,
.TransUnit--suggestion .TransUnit-item:nth-last-child(n+3):first-child ~ .TransUnit-item {
  margin-top: 1.5rem;
}

.TransUnit--suggestion .TransUnit-details {
  margin-top: 0.375rem;
}

@-webkit-keyframes loading {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 0 1000px;
  }
}

@keyframes loading {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 0 1000px;
  }
}

.Resizer {
  position: absolute;
  z-index: 1000;
}

.Resizer--vertical {
  cursor: ew-resize;
  width: 12px;
  top: 0;
  bottom: 0;
}

.Resizer--horizontal {
  height: 12px;
  left: 0;
  right: 0;
  cursor: ns-resize;
}

/**
 * Views
 */

/** @define Editor; use strict */



.Editor {
  overflow: hidden;
}

.Editor-header,
.Editor-loader {
  -webkit-transition: .2s all cubic-bezier(.175, .885, .320, 1.275);
          transition: .2s all cubic-bezier(.175, .885, .320, 1.275);
}

.Editor-header.is-minimised {
  -webkit-transform: translateY(-3rem);
      -ms-transform: translateY(-3rem);
          transform: translateY(-3rem);
}

.Editor-header.is-minimised .Editor-mainNav {
  visibility: hidden;
}

.Editor-loader {
  position: absolute;
  z-index: 900;
  top: 0;
  left: 50%;
  -webkit-transform: translate(-50%, 0.375rem);
      -ms-transform: translate(-50%, 0.375rem);
          transform: translate(-50%, 0.375rem);
}

.Editor-loader.is-minimised {
  -webkit-transform: translateX(-50%) scale(.75, .75);
      -ms-transform: translateX(-50%) scale(.75, .75);
          transform: translateX(-50%) scale(.75, .75);
}

.Editor-mainNav {
  height: 3rem;
}

.Editor-content {
  position: absolute;
  left: 0;
  right: 0;
  top: 5.625rem;
  bottom: 0;
  overflow: auto;
  overflow-y: scroll;
  width: 100%;
  -webkit-overlow-scrolling: touch;
}

.Editor-content.is-maximised {
  top: 2.625rem;
}

.Editor-translations {
  min-height: 100%;
  padding: 3rem 0;
  background: -webkit-linear-gradient(left, rgb(215, 229, 234), rgb(215, 229, 234));
  background: linear-gradient(left, rgb(215, 229, 234), rgb(215, 229, 234));
  background-position: left center;
  background-size: 1.5rem 100%;
  background-repeat: no-repeat;
}

.Editor-currentDoc {
  max-width: 5.25rem;
}

.Editor-currentLang {
  max-width: 5.25rem;
}

.Editor-suggestions {
  position: fixed;
  z-index: 200;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  box-shadow: 0 -0.1875rem 1.5rem rgba(0,0,0,.1);
  /*transform: translateY(100%);*/
}

.Editor-suggestionsHeader {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  box-shadow: 0 1px 1px rgba(0,0,0,0.1);
  z-index: 300;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.Editor-suggestionsBody {
  /* Fallback */
  position: absolute;
  top: 2.25rem;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: scroll;
  overflow-x: hidden;
  overflow-y: scroll;
}

.Editor.is-suggestions-active .Editor-suggestions {
  /*transform: translateY(0);*/
}

.Editor-suggestions.is-search-active .Editor-suggestionsBody {
  top: 4.5rem;
}

.Editor-suggestionsSearch {
  clear: both;
}

/**
 * Media Queries
 */

@media (min-width:0) and (max-width:740px) {
  .Editor-currentProject {
    max-width: 5.25rem;
  }
}

@media (min-width:741px) {
  .Editor-translations {
    background: -webkit-linear-gradient(left, rgb(215, 229, 234), rgb(215, 229, 234)), -webkit-linear-gradient(left, #ECEFF0, #ECEFF0);
    background: linear-gradient(to right, rgb(215, 229, 234), rgb(215, 229, 234)),
      linear-gradient(to right, #ECEFF0, #ECEFF0);
    background-position: center,
      right;
    background-size: 1.5rem 100%,
      50% 100%;
    background-repeat: no-repeat;
  }
}

/**
 * Theme
 */

/**
* Theme definition
*
* This defines the theme in fundamental terms, but not how it is applied to
* the components. That is done in `theme-map.css`.
*/

/**
* Breakpoints
*/

/**
 * Colors
 */

:root {
  /* Primary greys */
  /* Main colors */
  /* Background colors */
  /* State colors */
  /* Font colors */
}

/**
 * Font
 */



/**
 * Style Defaults
 */



/**
 * Rhythm
 */



/**
 * Transitions
 */



/**
 * Z-Index Scale
 */



/**
 *
 * Utilities
 *
 */

/**
 * Background
 */



/**
 * List
 */



/**
 * Size
 */



/**
 * Space
 */



/**
 * Display
 */



/**
 * Text
 */



/**
 *
 * Components
 *
 */

/**
 * Base
 */

:root {
  /* Forms */
  /* Global */
  /* Headings */
  /* Links */
  /* Lists */
  /* Media */
  /* Misc */
  /* Text */
}

/**
 * Button
 */



/**
 * Button Group
 */



/**
 * Dropdown
 */



/**
 * Header
 */



/**
 * Headings
 */



/**
 * Icon
 */



/**
 * Links
 */



/**
 * Difference
 */



/**
 * LogoLoader
 */



/**
 * Modal
 */



/**
 * Progressbar
 */



/**
 * Toggle
 */



/**
 * TransUnit
 */



/**
 *
 * Views
 *
 */

/**
 * Editor
 */



/* Fix for hotkeys, remove this when reimplemented */

.fade {
  -webkit-transition: opacity .25s easein;
          transition: opacity .25s easein;
  opacity: 0;
}

.fade.in {
  opacity: 1;
}

/* Angular specific classes */

[ng\:cloak],
[ng-cloak],
[data-ng-cloak],
[x-ng-cloak],
.ng-cloak,
.x-ng-cloak {
  display: none !important;
}
/*# sourceMappingURL=data:application/json;base64, */